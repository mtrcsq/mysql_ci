<project default="main" basedir="../../">
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="${basedir}/lib/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>
   <taskdef name="staf" classname="com.ibm.staf.ant.taskdef.STAF" >
      <classpath>
         <pathelement location="${basedir}/lib/STAFAnt.jar" />
      </classpath>
   </taskdef>
   <property file="${basedir}/src/conf/test.conf" /> 
   <target name="main">
      <property name="srccode_dir" location="${WORKSPACE}/sequoiadb" />
      <property name="release_dir" location="${WORKSPACE}/release" /> 
      <delete dir="${release_dir}" failonerror="false"/>
      <mkdir dir="${release_dir}"/>
      <getplatform resultProperty="platform" />
      <antcall target="clean"/>
      <if>
         <equals arg1="${IS_DEBUG}" arg2="true"/>
         <then>
            <antcall target="compile_client"/>
         </then>
         <else>
            <antcall target="copy_driver"/>
         </else>
      </if>
      <antcall target="compile_mysql"/>
      <antcall target="copy_package"/>
      <antcall target="build_run_package"/>
   </target>
   
   <target name="clean">
   
      <delete dir="${release_dir}/mysql" failonerror="false"/>
      <mkdir dir="${release_dir}/mysql"/>
      
      <delete dir="${MYSQL_SRCCODE}/storage/sequoiadb" failonerror="false"/>
      <mkdir dir="${MYSQL_SRCCODE}/storage/sequoiadb"/>
      <mkdir dir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb"/>
      
      <delete dir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb/lib" failonerror="false"/>
      <mkdir dir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb/lib"/>
   </target>
   
   <target name="compile_client">
      <echo message="Compile the sequoiadb..." />
      <echo message="exec cmd: scons --enterprise --client" />
      <exec executable="scons" dir="${srccode_dir}" failonerror="true">
         <arg line=" --enterprise --client" />
      </exec>
      <!--cp -r /opt/sequoiadb/include mysql-5.7.18/storage/sequoiadb/sequoiadb-->
      <copy todir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb">
         <fileset dir="${srccode_dir}/client" includes="include/**/**" />
      </copy>
      <copy todir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb/lib">
         <fileset dir="${srccode_dir}/client/lib" includes="libstaticsdbcpp.a" />
      </copy>
   </target>   
   
   <target name="copy_driver">
      <if>
         <equals arg1="${SDB_VERSION}" arg2=""/>
         <then>
           <dbversion srccodedir="${srccode_dir}" version="sequoiadb_version"/>
            <var name="tmp_sdb_version" value="${sequoiadb_version}"/>
         </then>
         <else>
            <var name="tmp_sdb_version" value="${SDB_VERSION}"/>
         </else>
      </if>
      <if>
         <equals arg1="${USE_ARCHIVE}" arg2="true"/>
         <then>
            <propertyregex property="dbversionpre" input="${tmp_sdb_version}" regexp="([0-9]*\d.[0-9]*\d)(.*)" select="\1" casesensitive="false"/>
            <delete dir="${CI_WORK_DIR}" failonerror="false"/>
            <mkdir dir="${CI_WORK_DIR}"/>
            <var name="driver_src_dir" value="${DB_PACKAGE_DIR}/SequoiaDB/SequoiaDB ${dbversionpre}/x86_64/driver-${tmp_sdb_version}"/>
            <staf location="local" service="FS"
                  request="COPY FILE ${driver_src_dir}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64.tar.gz TODIRECTORY ${CI_WORK_DIR} TOMACHINE local"
                  throwBuildException="1"/>

            <exec executable="tar" dir="${CI_WORK_DIR}" failonerror="true" logError="true">
               <arg line=" -zxvf ${CI_WORK_DIR}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64.tar.gz " />
            </exec>

            <!--cp -r /opt/sequoiadb/include mysql-5.7.18/storage/sequoiadb/sequoiadb-->
            <copy todir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb">
               <fileset dir="${CI_WORK_DIR}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64" includes="include/**/**" />
            </copy>
            <copy todir="${MYSQL_SRCCODE}/storage/sequoiadb/sequoiadb/lib">
               <fileset dir="${CI_WORK_DIR}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64/lib" includes="libsdbcpp.so" />
            </copy>
         </then>
         <else>
            <antcall target="compile_client"/>
         </else>
      </if>
   </target>
   
 <target name="copy_package">
      <var name="mysqltarget" value="/opt/sequoiasql/mysql"/>
      <if>
         <equals arg1="${SDB_VERSION}" arg2=""/>
         <then>
           <dbversion srccodedir="${srccode_dir}" version="sequoiadb_version"/>
            <var name="tmp_sdb_version" value="${sequoiadb_version}"/>
         </then>
         <else>
            <var name="tmp_sdb_version" value="${SDB_VERSION}"/>
         </else>
      </if>
            <propertyregex property="dbversionpre" input="${tmp_sdb_version}" regexp="([0-9]*\d.[0-9]*\d)(.*)" select="\1" casesensitive="false"/>
            <delete dir="${CI_WORK_DIR}" failonerror="false"/>
            <mkdir dir="${CI_WORK_DIR}"/>
            <var name="driver_src_dir" value="${DB_PACKAGE_DIR}/SequoiaDB/SequoiaDB ${dbversionpre}/x86_64/driver-${tmp_sdb_version}"/>
            <staf location="local" service="FS"
                  request="COPY FILE ${driver_src_dir}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64.tar.gz TODIRECTORY ${CI_WORK_DIR} TOMACHINE local"
                  throwBuildException="1"/>

            <exec executable="tar" dir="${CI_WORK_DIR}" failonerror="true" logError="true">
               <arg line=" -zxvf ${CI_WORK_DIR}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64.tar.gz " />
            </exec>

            
            <copy todir="${mysqltarget}/lib">
               <fileset dir="${CI_WORK_DIR}/C&amp;CPP-${tmp_sdb_version}-linux_x86_64/lib" includes="libsdbcpp.so" />
            </copy>
   </target>

   
   <target name="compile_mysql">
      <var name="mysqltarget" value="/opt/sequoiasql/mysql"/>
      <delete dir="/opt/sequoiasql" failonerror="false"/>
      <mkdir dir="/opt/sequoiasql"/>
      <mkdir dir="${mysqltarget}"/>
      <!--copy diver/mysql/* to ${MYSQL_SRCCODE}/storage/sequoiadb-->
      <copy todir="${MYSQL_SRCCODE}/storage/sequoiadb">
         <fileset dir="${srccode_dir}/driver/mysql" includes="**/**" />
      </copy>
      <svnversion dir="${srccode_dir}/driver/mysql" version="fdw_svn" />
      <if>
         <and>
            <equals arg1="${USE_ARCHIVE}" arg2="true"/>
            <not>
               <equals arg1="${SDB_VERSION}" arg2=""/>
            </not>
         </and>
         <then>
            <var name="tmp_sdb_version" value="${SDB_VERSION}"/>
         </then>
         <else>
            <dbversion srccodedir="${srccode_dir}" version="sequoiadb_version"/>
            <var name="tmp_sdb_version" value="${sequoiadb_version}"/>
         </else>
      </if>
      
      <if>
         <equals arg1="${IS_DEBUG}" arg2="true"/>
         <then>
            <var name="cmd" value=". -DWITH_BOOST=${MYSQL_BOOST_DIR}/boost_1_59_0/ -DWITH_SDB_DRIVER=/opt/mysql-5.7.18/storage/sequoiadb/sequoiadb -DCMAKE_INSTALL_PREFIX=${mysqltarget} -DMYSQL_DATADIR=${mysqltarget}/data -DCMAKE_BUILD_TYPE=Debug -DSDB_VER=${tmp_sdb_version}_${fdw_svn}"/>
         </then>
         <else>
            <var name="cmd" value=". -DWITH_BOOST=${MYSQL_BOOST_DIR}/boost_1_59_0/ -DWITH_SDB_DRIVER=/opt/mysql-5.7.18/storage/sequoiadb/sequoiadb -DCMAKE_INSTALL_PREFIX=${mysqltarget} -DMYSQL_DATADIR=${mysqltarget}/data -DCMAKE_BUILD_TYPE=Release -DSDB_VER=${tmp_sdb_version}_${fdw_svn}"/>
         </else>
      </if>
      <echo>cmake ${cmd} in dir ${MYSQL_SRCCODE}</echo>
      <exec executable="cmake" dir="${MYSQL_SRCCODE}" failonerror="true" logError="true">
         <arg line=" ${cmd} " />
      </exec>
      <echo>make -j 4 in dir ${MYSQL_SRCCODE}</echo>
      <exec executable="make" dir="${MYSQL_SRCCODE}" failonerror="true" logError="true">
         <arg line=" -j 4 " />
      </exec>
      
      <echo>make install in dir ${MYSQL_SRCCODE}</echo>
      <exec executable="make" dir="${MYSQL_SRCCODE}" failonerror="true" logError="true">
         <arg line=" install " />
      </exec>
      
      <copy todir="${mysqltarget}">
        <fileset dir="${srccode_dir}/misc/ci/mysqlrelease" includes="license/*"/>
      </copy>
      
   </target>
   
   <target name="build_run_package">
      <var name="mysqltarget" value="/opt/sequoiasql/mysql"/>
      <copy todir="${mysqltarget}/../">
         <fileset dir="${srccode_dir}/misc/ci/mysqlrelease" />
      </copy>  
      <if>
         <equals arg1="${IS_ENTERPRISE}" arg2="true" />
         <then>  
            <property name="edition_str" value="-enterprise" />          
         </then>
         <else>             
            <property name="edition_str" value="" /> 
         </else>
      </if>
      <if>
         <and>
            <equals arg1="${USE_ARCHIVE}" arg2="true"/>
            <not>
               <equals arg1="${SDB_VERSION}" arg2=""/>
            </not>
         </and>
         <then>
            <var name="tmp_sdb_version" value="${SDB_VERSION}"/>
         </then>
         <else>
            <dbversion srccodedir="${srccode_dir}" version="sequoiadb_version"/>
            <var name="tmp_sdb_version" value="${sequoiadb_version}"/>
         </else>
      </if>
      <var name="cmd" value="build sequoiamysql_server.xml --setvars project.version=${tmp_sdb_version} --setvars platform=${platform} --setvars edition=${edition_str} --setvars project.outputDirectory=${release_dir} --setvars sql_type=mysql"/>
      <echo>exec cmd: builder ${cmd}</echo>
      <echo>exec in dir: ${mysqltarget}</echo>
      <exec executable="builder" dir="${mysqltarget}/../" failonerror="true" logError="true">
         <arg line="${cmd}" />
      </exec>
   </target>
   
   <macrodef name="svnversion">
      <attribute name="dir"/>
      <attribute name="version"/>
      <sequential>
         <var name="@{verison}" unset="true"/>
         <exec executable="git" dir="@{dir}" outputproperty="@{version}" failonerror="true" logError="true" >
            <arg line="rev-parse HEAD" />
         </exec>
      </sequential>
   </macrodef>

   
   <macrodef name="dbversion">
      <attribute name="srccodedir"/>
      <attribute name="version"/>
      <sequential>
         <var name="tools_dir" value="@{srccodedir}/misc/ci/src/compile"/>
         <exec executable="gcc" dir="${tools_dir}" failonerror="true" logError="true">
            <arg line="${tools_dir}/print_version.c -o ${tools_dir}/print_version -I@{srccodedir}/SequoiaDB/engine/include" />
         </exec>
         <var name="@{version}" unset="true"/>
         <exec executable="${tools_dir}/print_version" outputproperty="@{version}" failonerror="true" logError="true" />
      </sequential>
   </macrodef>
   
   
   <macrodef name="getplatform">
      <attribute name="resultProperty"/>
      <sequential>
         <exec executable="uname" outputproperty="uname" failonerror="true" logError="true" >
            <arg line="-i" />
         </exec>
         <var name="@{resultProperty}" value="unknown" unset="true"/>
         <condition property="@{resultProperty}" value="linux_x86_64">
            <equals arg1="${uname}" arg2="x86_64" />
         </condition>
         <condition property="@{resultProperty}" value="ppc_linux_64">
            <equals arg1="${uname}" arg2="ppc64" />
         </condition>
      </sequential>
   </macrodef>
   
</project>
